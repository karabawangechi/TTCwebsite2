{"version":3,"sources":["server.js"],"names":["express","require","app","bodyParser","session","cookieParser","MongoStore","connectDB","multer","upload","dest","router","Router","use","json","urlencoded","extended","PORT","process","env","secret","resave","saveUninitialized","store","create","mongoUrl","post","fields","name","maxCount","req","res","registrationData","body","files","admissionLetter","path","nationalID","kceseCertificate","kcseResultSlip","leavingCertificate","birthCertificate","newRegistration","Registration","save","status","send","console","error","set","get","render","sendConfirmationEmail","userEmail","transporter","nodemailer","createTransport","service","auth","user","pass","mailOptions","from","to","subject","text","sendMail","info","log","module","exports","listen"],"mappings":"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","sourcesContent":["const express = require(\"express\");\r\nconst app = express();\r\nconst bodyParser = require('body-parser');\r\nconst session = require('express-session');\r\n//const flash = require('connect-flash');\r\n//const passport = require('passport');\r\n//const bcrypt = require('bcryptjs');\r\n//const jwt = require('jsonwebtoken');\r\n//const nodemailer = require('nodemailer');\r\nconst cookieParser = require('cookie-parser'); // Added missing import\r\nconst MongoStore = require('connect-mongo'); // Added missing import\r\nconst connectDB = require('./config/db.config');\r\n//const Reply = require('./models/reply.model');\r\n//const Blog = require('./models/blog.model');\r\n//const pdfkit = require('pdfkit');\r\n//const fs = require('fs');\r\nconst multer = require('multer');\r\n//const Copperivy = require('./models/copperivy');\r\n//const Register = require('./models/registerrestaurant.model');\r\nconst upload = multer({ dest: 'uploads/' });\r\nconst router = express.Router();\r\n\r\napp.use(express.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\nconst PORT = process.env.PORT || 5000;\r\n\r\napp.use(cookieParser())\r\napp.use(session({\r\n    secret: 'keyboard cat',\r\n    resave: false,\r\n    saveUninitialized: true,\r\n    store: MongoStore.create({\r\n        mongoUrl: \"mongodb://127.0.0.1:27017/Mwencha\"\r\n    })\r\n}));\r\napp.post('/register', upload.fields([\r\n    { name: 'admissionLetter', maxCount: 1 },\r\n    { name: 'nationalID', maxCount: 1 },\r\n    { name: 'kceseCertificate', maxCount: 1 },\r\n    { name: 'kcseResultSlip', maxCount: 1 },\r\n    { name: 'leavingCertificate', maxCount: 1 },\r\n    { name: 'birthCertificate', maxCount: 1 }\r\n  ]), async (req, res) => {\r\n    try {\r\n      const registrationData = req.body;\r\n      const files = req.files;\r\n  \r\n      // Save file paths to registration data\r\n      registrationData.admissionLetter = files.admissionLetter[0].path;\r\n      registrationData.nationalID = files.nationalID[0].path;\r\n      registrationData.kceseCertificate = files.kceseCertificate[0].path;\r\n      registrationData.kcseResultSlip = files.kcseResultSlip[0].path;\r\n      registrationData.leavingCertificate = files.leavingCertificate[0].path;\r\n      registrationData.birthCertificate = files.birthCertificate[0].path;\r\n      // Save registration data to database\r\n    const newRegistration = new Registration(registrationData);\r\n    await newRegistration.save();\r\n\r\n    res.status(201).send('Registration successful!');\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n});\r\n\r\napp.use(express.static('assets'));\r\napp.set('view engine', 'ejs');\r\napp.use('/assets', express.static('assets'));\r\n\r\napp.use(express.static('assets'));\r\napp.use(express.static('uploads'));\r\napp.use(express.static('node_modules'));\r\napp.use('/', router);\r\n\r\nrouter.get('/index', (req, res) => { // Fixed incorrect route\r\n    res.render(\"index.ejs\");\r\n});\r\nrouter.get('/about', (req, res) => { // Fixed incorrect route\r\n    res.render(\"about.ejs\");\r\n});\r\nrouter.get('/contact', (req, res) => { // Fixed incorrect route\r\n    res.render(\"contact.ejs\");\r\n});\r\n\r\nrouter.get('/courses', (req, res) => { // Fixed incorrect route\r\n    res.render(\"courses.ejs\");\r\n});\r\nrouter.get('/register', (req, res) => { // Fixed incorrect route\r\n    res.render(\"courses.ejs\");\r\n});\r\nasync function sendConfirmationEmail(userEmail) {\r\n    try {\r\n        // Create a nodemailer transporter\r\n        const transporter = nodemailer.createTransport({\r\n            service: 'gmail',\r\n            auth: {\r\n                user: '',\r\n                pass: '',\r\n            },\r\n        });\r\n\r\n        // Define email options\r\n        const mailOptions = {\r\n            from: '',\r\n            to: userEmail, // Use the provided userEmail parameter\r\n            subject: 'Subscription Confirmation',\r\n            text: 'Thank you for subscribing to our newsletter! You will receive monthly updates on the best places to dine.',\r\n        };\r\n\r\n        // Send the email\r\n        const info = await transporter.sendMail(mailOptions);\r\n        console.log('Email sent:', info);\r\n\r\n        return info;\r\n    } catch (error) {\r\n        console.error('Error sending email:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// Export the sendConfirmationEmail function\r\nmodule.exports = { sendConfirmationEmail };\r\n\r\napp.listen(PORT, () => {\r\n    console.log(`App is listening on port ${PORT}`);\r\n});\r\n"],"file":"server.dev.js"}