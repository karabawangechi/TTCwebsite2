{"version":3,"sources":["server.js"],"names":["express","require","app","bodyParser","session","cookieParser","MongoStore","connectDB","multer","Contact","Registration","Subscribe","router","Router","use","json","urlencoded","extended","PORT","process","env","secret","resave","saveUninitialized","store","create","mongoUrl","storage","diskStorage","destination","req","file","cb","filename","originalname","upload","post","fields","name","maxCount","res","body","email","files","newRegistration","admissionLetter","path","nationalID","kcseCertificate","leavingCertificate","birthCertificate","save","status","message","console","error","set","get","render","user","sendConfirmationEmail","userEmail","transporter","nodemailer","createTransport","service","auth","pass","mailOptions","from","to","subject","text","sendMail","info","log","module","exports","Subcriber","contactData","newContact","listen"],"mappings":"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","sourcesContent":["const express = require(\"express\");\r\nconst app = express();\r\nconst bodyParser = require('body-parser');\r\nconst session = require('express-session');\r\n//const multer = require('multer');\r\n//const flash = require('connect-flash');\r\n//const passport = require('passport');\r\n//const bcrypt = require('bcryptjs');\r\n//const jwt = require('jsonwebtoken');\r\n//const nodemailer = require('nodemailer');\r\nconst cookieParser = require('cookie-parser'); // Added missing import\r\nconst MongoStore = require('connect-mongo'); // Added missing import\r\nconst connectDB = require('./config/db.config');\r\n\r\nconst multer = require('multer');\r\n\r\nconst Contact =require('./models/contactform.js')\r\nconst Registration =require('./models/register.js')\r\nconst Subscribe =require('./models/subscriber.js')\r\n//const upload = multer({ dest: 'uploads/' });\r\nconst router = express.Router();\r\n\r\napp.use(express.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\nconst PORT = process.env.PORT || 5000;\r\n\r\napp.use(cookieParser())\r\napp.use(session({\r\n    secret: 'keyboard cat',\r\n    resave: false,\r\n    saveUninitialized: true,\r\n    store: MongoStore.create({\r\n        mongoUrl: \"mongodb://127.0.0.1:27017/Mwencha\"\r\n    })\r\n}));\r\nconst storage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n      cb(null, 'uploads/') // Folder where files will be stored\r\n    },\r\n    filename: function (req, file, cb) {\r\n      cb(null, file.originalname) // Keep original file name\r\n    }\r\n  });\r\n  \r\nconst upload = multer({ storage: storage });\r\n//Handle POST request for registration form\r\napp.post('/register', upload.fields([\r\n    { name: 'admissionLetter', maxCount: 1 },\r\n    { name: 'nationalID', maxCount: 1 },\r\n    { name: 'kcseCertificate', maxCount: 1 },\r\n    { name: 'leavingCertificate', maxCount: 1 },\r\n    { name: 'birthCertificate', maxCount: 1 }\r\n  ]), async (req, res) => {\r\n    try {\r\n      const { name, email } = req.body;\r\n      const files = req.files;\r\n  \r\n      // Create a new registration document\r\n      const newRegistration = new Registration({\r\n        name: name,\r\n        email: email,\r\n        admissionLetter: files.admissionLetter[0].path,\r\n        nationalID: files.nationalID[0].path,\r\n        kcseCertificate: files.kcseCertificate[0].path,\r\n        leavingCertificate: files.leavingCertificate[0].path,\r\n        birthCertificate: files.birthCertificate[0].path\r\n      });\r\n  \r\n      // Save the registration document to the database\r\n      await newRegistration.save();\r\n  \r\n      // Send response indicating successful registration\r\n      res.status(201).json({ message: 'Registration successful' });\r\n    } catch (error) {\r\n      console.error('Error processing registration:', error);\r\n      res.status(500).json({ error: 'Internal Server Error' });\r\n    }\r\n  });\r\napp.use(express.static('assets'));\r\napp.set('view engine', 'ejs');\r\napp.use('/assets', express.static('assets'));\r\n\r\napp.use(express.static('assets'));\r\napp.use(express.static('uploads'));\r\napp.use(express.static('node_modules'));\r\napp.use('/', router);\r\n\r\nrouter.get('/index', (req, res) => { // Fixed incorrect route\r\n    res.render(\"index.ejs\");\r\n});\r\nrouter.get('/about', (req, res) => { // Fixed incorrect route\r\n    res.render(\"about.ejs\");\r\n});\r\nrouter.get('/contact', (req, res) => { // Fixed incorrect route\r\n    res.render(\"contact.ejs\");\r\n});\r\n\r\nrouter.get('/courses', (req, res) => { // Fixed incorrect route\r\n    res.render(\"courses.ejs\");\r\n});\r\nrouter.get('/register', (req, res) => { // Fixed incorrect route\r\n    res.render(\"register.ejs\");\r\n});\r\n\r\nrouter.get('/contact', (req, res) => {\r\n    \r\n\r\n    res.render(\"contact.ejs\" ,{user});\r\n    })\r\n\r\n    async function sendConfirmationEmail(userEmail) {\r\n        try {\r\n            // Create a nodemailer transporter\r\n            const transporter = nodemailer.createTransport({\r\n                service: 'gmail',\r\n                auth: {\r\n                    user: 'Iseatout@gmail.com',\r\n                    pass: 'dytjsxykactbirfc',\r\n                },\r\n            });\r\n    \r\n            // Define email options\r\n            const mailOptions = {\r\n                from: 'Iseatout@gmail.com',\r\n                to: userEmail, // Use the provided userEmail parameter\r\n                subject: 'Subscription Confirmation',\r\n                text: 'Thank you for subscribing to our newsletter! You will receive monthly updates on the best places to dine.',\r\n            };\r\n    \r\n            // Send the email\r\n            const info = await transporter.sendMail(mailOptions);\r\n            console.log('Email sent:', info);\r\n    \r\n            return info;\r\n        } catch (error) {\r\n            console.error('Error sending email:', error);\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    // Export the sendConfirmationEmail function\r\n    module.exports = { sendConfirmationEmail };\r\n    \r\n    // Use the sendConfirmationEmail function in your route handler\r\n    app.post('/subscribe', async (req, res) => {\r\n        const { email } = req.body;\r\n    \r\n        // Save the subscriber's email in your database or perform any other necessary actions\r\n    \r\n        try {\r\n            // Send the confirmation email by passing the email as a parameter\r\n            await sendConfirmationEmail(email);\r\n    \r\n            // Render a success page or respond with a success message\r\n            const Subcriber = { email };\r\n            res.render('Subscribe.ejs', { user });\r\n        } catch (error) {\r\n            console.error('Error subscribing:', error);\r\n            res.status(500).json({ error: 'An error occurred' });\r\n        }\r\n    });\r\n    \r\n\r\n    router.post('/contactform',  async (req, res) => {\r\n        const { name, message, email,subject } =req.body\r\n        // Assuming you have set up user authentication\r\n        const contactData = {\r\n            name,\r\n             message,\r\n             subject,\r\n              email };\r\n      \r\n        try {\r\n          const newContact = await Contact.create(contactData);\r\n          res.render('contact.ejs',{newContact}); // Redirect to the newly created reply\r\n        } catch (error) {\r\n          console.error('Error creating reply:', error);\r\n          res.status(500).json({ error: 'Internal Server Error' });\r\n        }\r\n      });\r\napp.listen(PORT, () => {\r\n    console.log(`App is listening on port ${PORT}`);\r\n});\r\n"],"file":"server.dev.js"}