{"version":3,"sources":["server.js"],"names":["express","require","app","bodyParser","session","cookieParser","MongoStore","connectDB","multer","Contact","Registration","nodemailer","router","Router","use","json","urlencoded","extended","PORT","process","env","secret","resave","saveUninitialized","store","create","mongoUrl","set","get","req","res","render","storage","diskStorage","destination","file","cb","filename","originalname","upload","post","fields","name","maxCount","body","email","files","newRegistration","admissionLetter","path","nationalID","kcseCertificate","leavingCertificate","birthCertificate","save","transporter","createTransport","service","auth","user","pass","mailOptions","from","to","subject","text","sendMail","error","info","console","log","response","status","message","newContact","successMessage","listen"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMM,SAAS,GAAGN,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAMO,MAAM,GAAGP,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMQ,OAAO,GAAGR,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAMS,YAAY,GAAGT,OAAO,CAAC,sBAAD,CAA5B;;AACA,IAAMU,UAAU,GAAGV,OAAO,CAAC,YAAD,CAA1B,C,CAA0C;;;AAC1C,IAAMW,MAAM,GAAGZ,OAAO,CAACa,MAAR,EAAf;AAEAX,GAAG,CAACY,GAAJ,CAAQd,OAAO,CAACe,IAAR,EAAR;AACAb,GAAG,CAACY,GAAJ,CAAQX,UAAU,CAACa,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAhB,GAAG,CAACY,GAAJ,CAAQT,YAAY,EAApB;AACAH,GAAG,CAACY,GAAJ,CAAQV,OAAO,CAAC;AACZiB,EAAAA,MAAM,EAAE,cADI;AAEZC,EAAAA,MAAM,EAAE,KAFI;AAGZC,EAAAA,iBAAiB,EAAE,IAHP;AAIZC,EAAAA,KAAK,EAAElB,UAAU,CAACmB,MAAX,CAAkB;AACrBC,IAAAA,QAAQ,EAAE;AADW,GAAlB;AAJK,CAAD,CAAf;AAQAxB,GAAG,CAACY,GAAJ,CAAQd,OAAO,UAAP,CAAe,QAAf,CAAR;AACAE,GAAG,CAACyB,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAzB,GAAG,CAACY,GAAJ,CAAQ,SAAR,EAAmBd,OAAO,UAAP,CAAe,QAAf,CAAnB;AAEAE,GAAG,CAACY,GAAJ,CAAQd,OAAO,UAAP,CAAe,QAAf,CAAR;AACAE,GAAG,CAACY,GAAJ,CAAQd,OAAO,UAAP,CAAe,SAAf,CAAR;AACAE,GAAG,CAACY,GAAJ,CAAQd,OAAO,UAAP,CAAe,cAAf,CAAR;AACAE,GAAG,CAACY,GAAJ,CAAQ,GAAR,EAAaF,MAAb;AAEAA,MAAM,CAACgB,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,WAAX;AACH,CAFD;AAGAnB,MAAM,CAACgB,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,WAAX;AACH,CAFD;AAGAnB,MAAM,CAACgB,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,aAAX;AACH,CAFD;AAIAnB,MAAM,CAACgB,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,aAAX;AACH,CAFD;AAGAnB,MAAM,CAACgB,GAAP,CAAW,gBAAX,EAA6B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,mBAAX;AACH,CAFD;AAGAnB,MAAM,CAACgB,GAAP,CAAW,WAAX,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,cAAX;AACH,CAFD;AAGAnB,MAAM,CAACgB,GAAP,CAAW,uBAAX,EAAoC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9CA,EAAAA,GAAG,CAACC,MAAJ,CAAW,0BAAX;AACH,CAFD,E,CAMA;;AACA,IAAMC,OAAO,GAAGxB,MAAM,CAACyB,WAAP,CAAmB;AACjCC,EAAAA,WAAW,EAAE,qBAAUL,GAAV,EAAeM,IAAf,EAAqBC,EAArB,EAAyB;AACpCA,IAAAA,EAAE,CAAC,IAAD,EAAO,UAAP,CAAF,CADoC,CACf;AACtB,GAHgC;AAIjCC,EAAAA,QAAQ,EAAE,kBAAUR,GAAV,EAAeM,IAAf,EAAqBC,EAArB,EAAyB;AACjCA,IAAAA,EAAE,CAAC,IAAD,EAAOD,IAAI,CAACG,YAAZ,CAAF,CADiC,CACL;AAC7B;AANgC,CAAnB,CAAhB;AASA,IAAMC,MAAM,GAAG/B,MAAM,CAAC;AAAEwB,EAAAA,OAAO,EAAEA;AAAX,CAAD,CAArB,C,CAEA;AACA;;AACA9B,GAAG,CAACsC,IAAJ,CAAS,WAAT,EAAsBD,MAAM,CAACE,MAAP,CAAc,CAChC;AAAEC,EAAAA,IAAI,EAAE,iBAAR;AAA2BC,EAAAA,QAAQ,EAAE;AAArC,CADgC,EAEhC;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,QAAQ,EAAE;AAAhC,CAFgC,EAGhC;AAAED,EAAAA,IAAI,EAAE,iBAAR;AAA2BC,EAAAA,QAAQ,EAAE;AAArC,CAHgC,EAIhC;AAAED,EAAAA,IAAI,EAAE,oBAAR;AAA8BC,EAAAA,QAAQ,EAAE;AAAxC,CAJgC,EAKhC;AAAED,EAAAA,IAAI,EAAE,kBAAR;AAA4BC,EAAAA,QAAQ,EAAE;AAAtC,CALgC,CAAd,CAAtB,EAMM,iBAAOd,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEwBD,GAAG,CAACe,IAF5B,EAEQF,IAFR,aAEQA,IAFR,EAEcG,KAFd,aAEcA,KAFd;AAGMC,UAAAA,KAHN,GAGcjB,GAAG,CAACiB,KAHlB,EAKA;;AACMC,UAAAA,eANN,GAMwB,IAAIrC,YAAJ,CAAiB;AACvCgC,YAAAA,IAAI,EAAEA,IADiC;AAEvCG,YAAAA,KAAK,EAAEA,KAFgC;AAGvCG,YAAAA,eAAe,EAAEF,KAAK,CAACE,eAAN,CAAsB,CAAtB,EAAyBC,IAHH;AAIvCC,YAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,CAAiB,CAAjB,EAAoBD,IAJO;AAKvCE,YAAAA,eAAe,EAAEL,KAAK,CAACK,eAAN,CAAsB,CAAtB,EAAyBF,IALH;AAMvCG,YAAAA,kBAAkB,EAAEN,KAAK,CAACM,kBAAN,CAAyB,CAAzB,EAA4BH,IANT;AAOvCI,YAAAA,gBAAgB,EAAEP,KAAK,CAACO,gBAAN,CAAuB,CAAvB,EAA0BJ;AAPL,WAAjB,CANxB,EAgBA;;AAhBA;AAAA,0CAiBMF,eAAe,CAACO,IAAhB,EAjBN;;AAAA;AAmBA;AACMC,UAAAA,WApBN,GAoBoB5C,UAAU,CAAC6C,eAAX,CAA2B;AAC7CC,YAAAA,OAAO,EAAE,OADoC;AAE7CC,YAAAA,IAAI,EAAE;AACJC,cAAAA,IAAI,EAAE,oBADF;AAEJC,cAAAA,IAAI,EAAE,kBAFF,CAEqB;;AAFrB;AAFuC,WAA3B,CApBpB;AA4BMC,UAAAA,WA5BN,GA4BoB;AAClBC,YAAAA,IAAI,EAAE,oBADY;AAElBC,YAAAA,EAAE,EAAElB,KAFc;AAGlBmB,YAAAA,OAAO,EAAE,yBAHS;AAIlBC,YAAAA,IAAI;AAJc,WA5BpB;AAmCAV,UAAAA,WAAW,CAACW,QAAZ,CAAqBL,WAArB,EAAkC,UAACM,KAAD,EAAQC,IAAR,EAAiB;AACjD,gBAAID,KAAJ,EAAW;AACTE,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,KAApC;AACD,aAFD,MAEO;AACLE,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAAI,CAACG,QAAhC;AACD;AACF,WAND;AASAzC,UAAAA,GAAG,CAACC,MAAJ,CAAW,8BAAX;AA5CA;AAAA;;AAAA;AAAA;AAAA;AA8CAsC,UAAAA,OAAO,CAACF,KAAR,CAAc,gCAAd;AACArC,UAAAA,GAAG,CAAC0C,MAAJ,CAAW,GAAX,EAAgBzD,IAAhB,CAAqB;AAAEoD,YAAAA,KAAK,EAAE;AAAT,WAArB;;AA/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CANN;AAwDEjE,GAAG,CAACsC,IAAJ,CAAS,cAAT,EAAyB,kBAAOX,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnB;AAFmB,uBAGuBD,GAAG,CAACe,IAH3B,EAGXF,IAHW,cAGXA,IAHW,EAGLG,KAHK,cAGLA,KAHK,EAGEmB,OAHF,cAGEA,OAHF,EAGWS,OAHX,cAGWA,OAHX,EAKnB;;AACMC,UAAAA,UANa,GAMA,IAAIjE,OAAJ,CAAY;AAC3BiC,YAAAA,IAAI,EAAEA,IADqB;AAE3BG,YAAAA,KAAK,EAAEA,KAFoB;AAG3BmB,YAAAA,OAAO,EAAEA,OAHkB;AAI3BS,YAAAA,OAAO,EAAEA;AAJkB,WAAZ,CANA,EAanB;;AAbmB;AAAA,0CAcbC,UAAU,CAACpB,IAAX,EAda;;AAAA;AAgBnB;AACCxB,UAAAA,GAAG,CAACC,MAAJ,CAAW,aAAX,EAA0B;AAAE4C,YAAAA,cAAc,EAAE;AAAlB,WAA1B;AAjBkB;AAAA;;AAAA;AAAA;AAAA;AAmBnBN,UAAAA,OAAO,CAACF,KAAR,CAAc,gCAAd;AACArC,UAAAA,GAAG,CAAC0C,MAAJ,CAAW,GAAX,EAAgBzD,IAAhB,CAAqB;AAAEoD,YAAAA,KAAK,EAAE;AAAT,WAArB;;AApBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB,E,CAwBF;;AAEAjE,GAAG,CAAC0E,MAAJ,CAAW1D,IAAX,EAAiB,YAAM;AACnBmD,EAAAA,OAAO,CAACC,GAAR,oCAAwCpD,IAAxC;AACH,CAFD","sourcesContent":["const express = require(\"express\");\r\nconst app = express();\r\nconst bodyParser = require('body-parser');\r\nconst session = require('express-session');\r\nconst cookieParser = require('cookie-parser');\r\nconst MongoStore = require('connect-mongo');\r\nconst connectDB = require('./config/db.config');\r\nconst multer = require('multer');\r\nconst Contact = require('./models/contactform.js');\r\nconst Registration = require('./models/register.js');\r\nconst nodemailer = require('nodemailer'); // Added nodemailer\r\nconst router = express.Router();\r\n\r\napp.use(express.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\nconst PORT = process.env.PORT || 5000;\r\n\r\napp.use(cookieParser())\r\napp.use(session({\r\n    secret: 'keyboard cat',\r\n    resave: false,\r\n    saveUninitialized: true,\r\n    store: MongoStore.create({\r\n        mongoUrl: \"mongodb://127.0.0.1:27017/Mwencha\"\r\n    })\r\n}));\r\napp.use(express.static('assets'));\r\napp.set('view engine', 'ejs');\r\napp.use('/assets', express.static('assets'));\r\n\r\napp.use(express.static('assets'));\r\napp.use(express.static('uploads'));\r\napp.use(express.static('node_modules'));\r\napp.use('/', router);\r\n\r\nrouter.get('/index', (req, res) => {\r\n    res.render(\"index.ejs\");\r\n});\r\nrouter.get('/about', (req, res) => {\r\n    res.render(\"about.ejs\");\r\n});\r\nrouter.get('/contact', (req, res) => {\r\n    res.render(\"contact.ejs\");\r\n});\r\n\r\nrouter.get('/courses', (req, res) => {\r\n    res.render(\"courses.ejs\");\r\n});\r\nrouter.get('/feesstructure', (req, res) => {\r\n    res.render(\"feesstructure.ejs\");\r\n});\r\nrouter.get('/register', (req, res) => {\r\n    res.render(\"register.ejs\");\r\n});\r\nrouter.get('/registerconfirmation', (req, res) => {\r\n    res.render(\"registerconfirmation.ejs\");\r\n});\r\n\r\n\r\n\r\n// Set up multer storage for file uploads\r\nconst storage = multer.diskStorage({\r\n  destination: function (req, file, cb) {\r\n    cb(null, 'uploads/') // Folder where files will be stored\r\n  },\r\n  filename: function (req, file, cb) {\r\n    cb(null, file.originalname) // Keep original file name\r\n  }\r\n});\r\n\r\nconst upload = multer({ storage: storage });\r\n\r\n// Handle POST request for registration form\r\n// Handle POST request for registration form\r\napp.post('/register', upload.fields([\r\n    { name: 'admissionLetter', maxCount: 1 },\r\n    { name: 'nationalID', maxCount: 1 },\r\n    { name: 'kcseCertificate', maxCount: 1 },\r\n    { name: 'leavingCertificate', maxCount: 1 },\r\n    { name: 'birthCertificate', maxCount: 1 }\r\n  ]), async (req, res) => {\r\n    try {\r\n      const { name, email } = req.body;\r\n      const files = req.files;\r\n  \r\n      // Create a new registration document\r\n      const newRegistration = new Registration({\r\n        name: name,\r\n        email: email,\r\n        admissionLetter: files.admissionLetter[0].path,\r\n        nationalID: files.nationalID[0].path,\r\n        kcseCertificate: files.kcseCertificate[0].path,\r\n        leavingCertificate: files.leavingCertificate[0].path,\r\n        birthCertificate: files.birthCertificate[0].path\r\n      });\r\n  \r\n      // Save the registration document to the database\r\n      await newRegistration.save();\r\n  \r\n      // Send email notification\r\n      const transporter = nodemailer.createTransport({\r\n        service: 'gmail',\r\n        auth: {\r\n          user: 'Iseatout@gmail.com',\r\n          pass: 'iwrnouidsjrjvbzw' // Provide your Gmail app password here\r\n        }\r\n      });\r\n  \r\n      const mailOptions = {\r\n        from: 'Iseatout@gmail.com',\r\n        to: email,\r\n        subject: 'Registration Successful',\r\n        text: `Thank you for registering with Mwencha TTC. Please note that you need to pay Ksh1000 unrefundable registration fee with Paybill 124536. Please forward the M-Pesa message to mwenchattc2023@gmail.com for confirmation.`\r\n      };\r\n  \r\n      transporter.sendMail(mailOptions, (error, info) => {\r\n        if (error) {\r\n          console.log('Error sending email:', error);\r\n        } else {\r\n          console.log('Email sent:', info.response);\r\n        }\r\n      });\r\n  \r\n      \r\n      res.render('registrationconfirmation.ejs' );\r\n    } catch (error) {\r\n      console.error('Error processing registration:', error);\r\n      res.status(500).json({ error: 'Internal Server Error' });\r\n    }\r\n  });\r\n  app.post('/contactform', async (req, res) => {\r\n    try {\r\n        // Extract data from the request body\r\n        const { name, email, subject, message } = req.body;\r\n\r\n        // Create a new contact document\r\n        const newContact = new Contact({\r\n            name: name,\r\n            email: email,\r\n            subject: subject,\r\n            message: message\r\n        });\r\n\r\n        // Save the contact document to the database\r\n        await newContact.save();\r\n\r\n        // Send response indicating successful contact form submission\r\n         res.render('contact.ejs', { successMessage: 'Your message has been sent. Thank you!' });\r\n    } catch (error) {\r\n        console.error('Error processing contact form:', error);\r\n        res.status(500).json({ error: 'Internal Server Error' });\r\n    }\r\n});\r\n\r\n// Other routes and middleware...\r\n\r\napp.listen(PORT, () => {\r\n    console.log(`App is listening on port ${PORT}`);\r\n});\r\n"],"file":"server.dev.js"}